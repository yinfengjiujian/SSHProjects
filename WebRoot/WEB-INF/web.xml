<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<display-name>duanmlssh</display-name>
	
	<!-- ********************** Spring框架对日志log4j进行初始化操作********************* -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/config/log4j.properties</param-value>
	</context-param>
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>6000</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<!-- 对Spring容器进行实例化 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/config/duanmlssh-applicationcontext.xml
	  		/WEB-INF/config/duanmlssh-Hibernate.xml
	   		/WEB-INF/config/duanmlssh-webService.xml
	    </param-value>
	</context-param>
	
	<!--配置HttpProxy代理服务器功能，随Web服务启动而自动加载    ********** Start***************-->
<!-- 	<listener>   -->
<!--         <listener-class>com.neusoft.duanmlssh.httpProxy.MyHttpProxyListener</listener-class>   -->
<!--     </listener> -->
<!--     <context-param> -->
<!-- 		<param-name>socketPort</param-name> -->
<!-- 		<param-value>8088</param-value> -->
<!-- 	</context-param> -->
	<!--配置HttpProxy代理服务器功能，随Web服务启动而自动加载     ******************End**********-->
	
	<!--配置过滤器 目的是让Spring来管理Hibernate的事务,并自动开启事务    很重要    -->
	<filter>
    <filter-name>osivFilter</filter-name>
    <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
    <init-param>
      <param-name>excludeSuffixs</param-name>
      <param-value>js,css,jpg,gif</param-value>
    </init-param>
    <init-param>
      <param-name>sessionFactoryBeanName</param-name>
      <param-value>sessionFactory</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>osivFilter</filter-name>
    <url-pattern>*.do</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>osivFilter</filter-name>
    <url-pattern>*.html</url-pattern>
  </filter-mapping>

	<!-- Start WebService Config 配置文件******************** -->
	<servlet>
		<servlet-name>JAXWSServlet</servlet-name>
		<servlet-class>com.sun.xml.ws.transport.http.servlet.WSSpringServlet</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>JAXWSServlet</servlet-name>
		<url-pattern>/webService/*</url-pattern>
	</servlet-mapping>
	<!-- End WebService Config 配置文件******************** -->



	<!-- 配置Spring 核心MVC控制器Servlet************************ -->
	<servlet>
		<servlet-name>MvcServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/config/duanmlssh-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>MvcServlet</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>


	<!-- 缓存过滤器 OsCache框架配置文件 ****CacheFilter -->
	<!-- 下面定义将缓存所有.jsp页面，缓存刷新时间为60秒，缓存作用域为Session 注意，CacheFilter只捕获Http头为200的页面请求，即只对无错误请求作缓存，而不对其他请求（如500,404,400）不作缓存处理 -->
	<filter>
		<filter-name>CacheFilter</filter-name>
		<filter-class>com.opensymphony.oscache.web.filter.CacheFilter</filter-class>
		<init-param>
			<param-name>time</param-name>
			<param-value>60</param-value>
		</init-param>
		<init-param>
			<param-name>scope</param-name>
			<param-value>session</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CacheFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>

	<jsp-config>
		<taglib>
			<taglib-uri>oscache</taglib-uri>
			<taglib-location>/WEB-INF/tld/oscache.tld</taglib-location>
		</taglib>
		
		<taglib>
			<taglib-uri>duanmltld</taglib-uri>
			<taglib-location>/WEB-INF/tld/duanml.tld</taglib-location>
		</taglib>
	</jsp-config>
</web-app>
